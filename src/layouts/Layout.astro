---
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "A retro-styled blog with 8-bit aesthetics" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-5R0D418NCG"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-5R0D418NCG');
    </script>

    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="apple-touch-icon" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />



    <!-- SEO and Social Media -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://randoblog.me/logo.png" />
    <meta property="og:url" content="https://randoblog.me" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="https://randoblog.me/logo.png" />

    <!-- Accessibility -->
    <meta name="theme-color" content="#00ff41" />

    <!-- KaTeX CSS for math rendering (local) -->
    <link rel="stylesheet" href="/katex.min.css" />
    <meta name="color-scheme" content="dark" />

    <title>{title}</title>

    <!-- Global smooth scrolling styles -->
    <style>
      html {
        scroll-behavior: smooth;
      }

      /* Add scroll margin to all headings to account for any fixed headers */
      h1, h2, h3, h4, h5, h6 {
        scroll-margin-top: 2rem;
      }
    </style>
    

  </head>
  <body>
    <!-- Header -->
    <header class="bg-bg-primary/95 backdrop-blur-md sticky top-0 z-50 shadow-lg shadow-bg-secondary/20" role="banner">
      <div class="max-w-4xl mx-auto px-6 py-6">
        <nav class="flex items-center justify-between" role="navigation" aria-label="Main navigation">
          <!-- Logo/Brand with tagline -->
          <a href="/" class="group flex items-center space-x-4" aria-label="RANDOBLOG home">
            <div class="flex-shrink-0">
              <img
                src="/logo.png"
                alt="RANDOBLOG Robot Logo"
                class="h-20 w-20 md:h-24 md:w-24 transition-transform duration-200 group-hover:scale-105 group-hover:rotate-2"
              />
            </div>
            <div class="flex flex-col justify-center h-20 md:h-24">
              <h1 class="text-xl md:text-2xl font-display font-bold bg-gradient-to-r from-accent-primary to-accent-secondary bg-clip-text text-transparent group-hover:opacity-80 transition-opacity leading-none -mb-4">
                RANDOBLOG
              </h1>
              <p class="text-xs md:text-sm text-text-muted font-medium tracking-wide leading-none -mt-3">
                Random Thoughts & Projects of a Wannabe Scientist
              </p>
            </div>
          </a>

          <!-- Desktop Navigation Links and Theme Toggle -->
          <div class="hidden md:flex items-center space-x-6">
            <a href="/" class="text-text-secondary hover:text-accent-primary transition-colors duration-200 font-medium">
              Home
            </a>
            <a href="/about/" class="text-text-secondary hover:text-accent-primary transition-colors duration-200 font-medium">
              About
            </a>

            <!-- Theme Toggle -->
            <button
              id="theme-toggle"
              class="p-2 rounded-lg bg-bg-tertiary hover:bg-accent-primary/10 transition-all duration-200 shadow-sm hover:shadow-md"
              aria-label="Toggle theme"
            >
              <svg id="theme-icon-dark" class="w-4 h-4 text-text-secondary" fill="currentColor" viewBox="0 0 20 20">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
              </svg>
              <svg id="theme-icon-light" class="w-4 h-4 text-text-secondary hidden" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
              </svg>
            </button>
          </div>

          <!-- Mobile Hamburger Menu -->
          <div class="md:hidden flex items-center space-x-3">
            <!-- Hamburger Button -->
            <button
              id="mobile-menu-toggle"
              class="p-2 rounded-lg bg-bg-tertiary hover:bg-accent-primary/10 transition-all duration-200 shadow-sm hover:shadow-md"
              aria-label="Toggle mobile menu"
            >
              <svg id="hamburger-icon" class="w-5 h-5 text-text-secondary" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
              </svg>
              <svg id="close-icon" class="w-5 h-5 text-text-secondary hidden" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
            </button>
          </div>
        </nav>
      </div>

      <!-- Mobile Menu Dropdown -->
      <div id="mobile-menu" class="md:hidden hidden bg-bg-secondary/95 backdrop-blur-md border-t border-border-color">
        <div class="max-w-4xl mx-auto px-4 py-4">
          <div class="bg-bg-primary/30 border border-border-color/30 rounded-lg p-1.5 divide-y divide-border-color/15">
            <a href="/" class="flex items-center gap-3 px-3 py-2.5 rounded-md text-text-secondary hover:bg-bg-tertiary/40 transition-colors">
              <svg class="w-4 h-4 text-text-muted" fill="currentColor" viewBox="0 0 20 20"><path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7A1 1 0 003 11h1v5a1 1 0 001 1h3a1 1 0 001-1v-3h2v3a1 1 0 001 1h3a1 1 0 001-1v-5h1a1 1 0 00.707-1.707l-7-7z"/></svg>
              <span class="font-medium">Home</span>
            </a>
            <a href="/about/" class="flex items-center gap-3 px-3 py-2.5 rounded-md text-text-secondary hover:bg-bg-tertiary/40 transition-colors">
              <svg class="w-4 h-4 text-text-muted" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 100 2 1 1 0 000-2zm-2 8a1 1 0 012 0h2a1 1 0 10-2 0H8z" clip-rule="evenodd"/></svg>
              <span class="font-medium">About</span>
            </a>
            <button id="theme-toggle-mobile" class="flex w-full items-center justify-between px-3 py-2.5 rounded-md text-text-secondary hover:bg-bg-tertiary/40 transition-colors">
              <span class="flex items-center gap-3">
                <svg id="theme-icon-dark-mobile" class="w-4 h-4 text-text-muted" fill="currentColor" viewBox="0 0 20 20"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/></svg>
                <svg id="theme-icon-light-mobile" class="w-4 h-4 text-text-muted hidden" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"/></svg>
                <span class="font-medium">Theme</span>
              </span>
              <span class="text-xs text-text-muted/70 bg-bg-tertiary/60 border border-border-color/30 rounded px-2 py-0.5">Toggle</span>
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="min-h-screen relative z-10" role="main">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="mt-32 py-8 text-center" role="contentinfo">
      <div class="max-w-4xl mx-auto px-6">
        <!-- Subtle separator line -->
        <div class="w-24 h-px bg-gradient-to-r from-transparent via-border-color/20 to-transparent mx-auto mb-6"></div>

        <div class="flex items-center justify-center space-x-4 text-xs text-text-muted/50">
          <span class="font-mono">© 2025 RANDOBLOG</span>
          <span class="text-text-muted/30">•</span>
          <a
            href="https://github.com/Xaxis"
            target="_blank"
            rel="noopener noreferrer"
            class="hover:text-text-muted transition-colors duration-200"
            aria-label="GitHub"
          >
            GitHub
          </a>
          <span class="text-text-muted/30">•</span>
          <a
            href="https://x.com/TheBTCViking"
            target="_blank"
            rel="noopener noreferrer"
            class="hover:text-text-muted transition-colors duration-200"
            aria-label="X"
          >
            X
          </a>

          <!-- Theme Toggle inside mobile menu -->
          <button
            id="theme-toggle-mobile"
            class="mt-2 w-full flex items-center justify-center space-x-2 p-2 rounded-lg bg-bg-tertiary hover:bg-accent-primary/10 transition-all duration-200 shadow-sm hover:shadow-md"
            aria-label="Toggle theme"
          >
            <svg id="theme-icon-dark-mobile" class="w-4 h-4 text-text-secondary" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
            </svg>
            <svg id="theme-icon-light-mobile" class="w-4 h-4 text-text-secondary hidden" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
            </svg>
            <span class="text-text-secondary">Theme</span>
          </button>
        </div>
      </div>
    </footer>


    <!-- Theme Toggle and Mobile Menu Script -->
    <script>
      // Theme toggle functionality
      const themeToggle = document.getElementById('theme-toggle');
      const themeToggleMobile = document.getElementById('theme-toggle-mobile');
      const darkIcon = document.getElementById('theme-icon-dark');
      const lightIcon = document.getElementById('theme-icon-light');
      const darkIconMobile = document.getElementById('theme-icon-dark-mobile');
      const lightIconMobile = document.getElementById('theme-icon-light-mobile');
      const html = document.documentElement;

      // Mobile menu functionality
      const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
      const mobileMenu = document.getElementById('mobile-menu');
      const hamburgerIcon = document.getElementById('hamburger-icon');
      const closeIcon = document.getElementById('close-icon');

      // Check for saved theme preference or default to dark
      const currentTheme = localStorage.getItem('theme') || 'dark';
      html.setAttribute('data-theme', currentTheme);

      // Update icon visibility for both desktop and mobile
      function updateIcons(theme) {
        if (theme === 'dark') {
          darkIcon.classList.remove('hidden');
          lightIcon.classList.add('hidden');
          darkIconMobile.classList.remove('hidden');
          lightIconMobile.classList.add('hidden');
        } else {
          darkIcon.classList.add('hidden');
          lightIcon.classList.remove('hidden');
          darkIconMobile.classList.add('hidden');
          lightIconMobile.classList.remove('hidden');
        }
      }

      updateIcons(currentTheme);

      // Toggle theme function
      function toggleTheme() {
        const newTheme = html.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
        html.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        updateIcons(newTheme);
      }

      // Desktop theme toggle
      themeToggle.addEventListener('click', toggleTheme);

      // Mobile theme toggle
      themeToggleMobile.addEventListener('click', toggleTheme);

      // Mobile menu toggle
      mobileMenuToggle.addEventListener('click', () => {
        const isOpen = !mobileMenu.classList.contains('hidden');

        if (isOpen) {
          // Close menu
          mobileMenu.classList.add('hidden');
          hamburgerIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
        } else {
          // Open menu
          mobileMenu.classList.remove('hidden');
          hamburgerIcon.classList.add('hidden');
          closeIcon.classList.remove('hidden');
        }
      });

      // Close mobile menu when clicking on a link
      const mobileMenuLinks = mobileMenu.querySelectorAll('a');
      mobileMenuLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('hidden');
          hamburgerIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
        });
      });
    </script>

    <!-- Global smooth scrolling for anchor links -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Handle all anchor links globally
        function handleAnchorLinks() {
          const anchorLinks = document.querySelectorAll('a[href^="#"]');

          anchorLinks.forEach(link => {
            // Remove existing listeners to avoid duplicates
            link.removeEventListener('click', handleAnchorClick);
            link.addEventListener('click', handleAnchorClick);
          });
        }

        function handleAnchorClick(e) {
          const href = this.getAttribute('href');

          // Skip if it's just "#" or empty
          if (!href || href === '#') return;

          const targetId = href.substring(1);
          const targetElement = document.getElementById(targetId);

          if (targetElement) {
            e.preventDefault();

            // Smooth scroll to the target element
            targetElement.scrollIntoView({
              behavior: 'smooth',
              block: 'start',
              inline: 'nearest'
            });

            // Update URL without triggering page reload
            if (history.pushState) {
              history.pushState(null, null, href);
            }
          }
        }

        // Handle direct navigation to anchors (e.g., from external links)
        function scrollToAnchorOnLoad() {
          const hash = window.location.hash;
          if (hash) {
            const targetElement = document.querySelector(hash);
            if (targetElement) {
              // Small delay to ensure page is fully loaded
              setTimeout(() => {
                targetElement.scrollIntoView({
                  behavior: 'smooth',
                  block: 'start',
                  inline: 'nearest'
                });
              }, 100);
            }
          }
        }

        // Initialize anchor link handling
        handleAnchorLinks();

        // Scroll to anchor on page load
        scrollToAnchorOnLoad();

        // Handle browser back/forward navigation
        window.addEventListener('popstate', scrollToAnchorOnLoad);

        // Re-initialize anchor links when new content is loaded (for dynamic content)
        const observer = new MutationObserver(function(mutations) {
          mutations.forEach(function(mutation) {
            if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
              handleAnchorLinks();
            }
          });
        });

        observer.observe(document.body, {
          childList: true,
          subtree: true
        });
      });
    </script>
  </body>
</html>
